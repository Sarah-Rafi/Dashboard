import React, { useState } from 'react';
export const SettingSvg = () => {
    const [iconColor, setIconColor] = useState('#0C0C0D');
    const [textColor, setTextColor] = useState('#0C0C0D');

    const toggleColor = () => {
        if (iconColor === '#0C0C0D') {
            setIconColor('#34B44A');
            setTextColor('#34B44A');
        } else {
            setIconColor('#0C0C0D');
            setTextColor('#0C0C0D');
        }
    };
    return (
        <button
            onClick={toggleColor}
            className="flex items-center"
        >
            <div class="flex flex-row">
                <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 28 28" fill="none">
                    <path d="M14.0731 18.6285C11.7355 18.6285 9.83838 16.7314 9.83838 14.3939C9.83838 12.0563 11.7355 10.1592 14.0731 10.1592C16.4106 10.1592 18.3077 12.0563 18.3077 14.3939C18.3077 16.7314 16.4106 18.6285 14.0731 18.6285ZM14.0731 11.853C12.6728 11.853 11.5322 12.9936 11.5322 14.3939C11.5322 15.7941 12.6728 16.9347 14.0731 16.9347C15.4733 16.9347 16.6139 15.7941 16.6139 14.3939C16.6139 12.9936 15.4733 11.853 14.0731 11.853Z" fill={iconColor} />
                    <path d="M17.6981 25.9002C17.461 25.9002 17.2238 25.8663 16.9867 25.8099C16.2866 25.6179 15.6993 25.1775 15.3267 24.5564L15.1912 24.3306C14.5249 23.1787 13.6102 23.1787 12.944 24.3306L12.8198 24.5451C12.4471 25.1775 11.8599 25.6292 11.1598 25.8099C10.4484 26.0018 9.71434 25.9002 9.09326 25.5276L7.15095 24.4096C6.46211 24.0144 5.96525 23.3707 5.75069 22.5915C5.54743 21.8123 5.64906 21.0106 6.04429 20.3217C6.37177 19.7458 6.46211 19.2264 6.27014 18.8989C6.07817 18.5714 5.5926 18.3794 4.92634 18.3794C3.27764 18.3794 1.93384 17.0356 1.93384 15.3869V13.3995C1.93384 11.7508 3.27764 10.407 4.92634 10.407C5.5926 10.407 6.07817 10.215 6.27014 9.8875C6.46211 9.56002 6.38307 9.04056 6.04429 8.46465C5.64906 7.77581 5.54743 6.96275 5.75069 6.19486C5.95395 5.41568 6.45082 4.77201 7.15095 4.37678L9.10455 3.25882C10.3806 2.50223 12.0632 2.94263 12.8311 4.24127L12.9666 4.46712C13.6328 5.61895 14.5475 5.61895 15.2138 4.46712L15.338 4.25256C16.1059 2.94263 17.7885 2.50223 19.0758 3.27012L21.0181 4.38807C21.7069 4.78331 22.2038 5.42698 22.4184 6.20616C22.6216 6.98533 22.52 7.7871 22.1248 8.47594C21.7973 9.05186 21.7069 9.57131 21.8989 9.89879C22.0909 10.2263 22.5765 10.4182 23.2427 10.4182C24.8914 10.4182 26.2352 11.762 26.2352 13.4107V15.3982C26.2352 17.0469 24.8914 18.3907 23.2427 18.3907C22.5765 18.3907 22.0909 18.5827 21.8989 18.9102C21.7069 19.2377 21.786 19.7571 22.1248 20.333C22.52 21.0219 22.6329 21.8349 22.4184 22.6028C22.2151 23.382 21.7182 24.0257 21.0181 24.4209L19.0645 25.5388C18.6354 25.776 18.1724 25.9002 17.6981 25.9002ZM14.0732 21.722C15.0783 21.722 16.0155 22.3544 16.6592 23.4723L16.7834 23.6869C16.9189 23.924 17.1448 24.0934 17.4158 24.1612C17.6868 24.2289 17.9578 24.195 18.1837 24.0595L20.1373 22.9303C20.4309 22.7609 20.6567 22.4786 20.7471 22.1398C20.8374 21.801 20.7922 21.451 20.6229 21.1574C19.9792 20.0507 19.9001 18.9102 20.397 18.0407C20.8939 17.1711 21.9215 16.6743 23.2088 16.6743C23.9316 16.6743 24.5075 16.0983 24.5075 15.3756V13.3882C24.5075 12.6767 23.9316 12.0895 23.2088 12.0895C21.9215 12.0895 20.8939 11.5927 20.397 10.7231C19.9001 9.85362 19.9792 8.71308 20.6229 7.60642C20.7922 7.31282 20.8374 6.96275 20.7471 6.62398C20.6567 6.2852 20.4422 6.01418 20.1486 5.8335L18.195 4.71555C17.7094 4.42195 17.0657 4.59133 16.7721 5.0882L16.6479 5.30276C16.0042 6.42071 15.067 7.05309 14.0619 7.05309C13.0569 7.05309 12.1196 6.42071 11.476 5.30276L11.3517 5.07691C11.0694 4.60263 10.4371 4.43324 9.95148 4.71555L7.99789 5.8448C7.70428 6.01418 7.47844 6.2965 7.3881 6.63527C7.29776 6.97404 7.34293 7.32411 7.51231 7.61771C8.15598 8.72437 8.23503 9.86491 7.73816 10.7344C7.24129 11.604 6.21368 12.1008 4.92634 12.1008C4.20362 12.1008 3.62771 12.6767 3.62771 13.3995V15.3869C3.62771 16.0984 4.20362 16.6856 4.92634 16.6856C6.21368 16.6856 7.24129 17.1824 7.73816 18.0519C8.23503 18.9215 8.15598 20.062 7.51231 21.1687C7.34293 21.4623 7.29776 21.8123 7.3881 22.1511C7.47844 22.4899 7.69299 22.7609 7.9866 22.9416L9.94019 24.0595C10.1773 24.2063 10.4596 24.2402 10.7194 24.1725C10.9904 24.1047 11.2162 23.924 11.363 23.6869L11.4873 23.4723C12.1309 22.3657 13.0682 21.722 14.0732 21.722Z" fill={iconColor} />
                </svg>
                <div class={`text-[18px] ml-[20px] font-normal font-['Roboto'] tracking-tight ${textColor}`} >Setting</div>
            </div>
        </button >
    );
};


